ggplot(aes(value)) +
geom_bar() +
facet_wrap("key", scales = "free")
p1 <- ggplot(alc, aes(x= G3, fill=high_use)) + geom_density(alpha=.3)
p1 + ggtitle("Final grade distribution") + theme_bw()
p1 <- ggplot(alc, aes(x= absences, fill=sex)) + geom_density(alpha=.3)
p1 + ggtitle("Absence distribution") + theme_bw()
p2 <- ggplot(alc, aes(x = high_use, fill = sex))
p2 + geom_bar() + facet_wrap("sex") + ggtitle("Student sex and alcohol consumption") + theme_bw()
# alc is available
# access the tidyverse libraries tidyr, dplyr, ggplot2
library(tidyr); library(dplyr); library(ggplot2)
# glimpse at the alc data
glimpse(alc)
# use gather() to gather columns into key-value pairs and then glimpse() at the resulting data
gather(alc) %>% glimpse()
# draw a bar plot of each variable
gather(alc) %>%
ggplot(aes(value)) +
geom_bar() +
facet_wrap("key", scales = "free")
# alc is available
# access the tidyverse libraries dplyr and ggplot2
library(dplyr); library(ggplot2)
# produce summary statistics by group
alc %>%
group_by(sex, high_use) %>%
summarise(count = n(), mean_grade = mean(G3))
alc %>%
group_by(famsize, high_use) %>%
summarise(count = n(), mean_grade = mean(G3))
CrossTable(alc$high_use, alc$famsize, dnn = c("High alcohol use", "Family size"))
CrossTable(alc$high_use, alc$Pstatus, dnn = c("High alcohol use", "Parental status"))
CrossTable(alc$high_use, alc$activities, dnn = c("High alcohol use", "Extra-curricular activities"))
CrossTable(alc$high_use, alc$famsize, dnn = c("High alcohol use", "Family size"))
alc %>%
group_by(famsize, high_use) %>%
summarise(count = n(), mean_grade = mean(G3))
library(dplyr)
library(gmodels)
CrossTable(alc$high_use, alc$famsize, dnn = c("High alcohol use", "Family size"))
CrossTable(alc$high_use, alc$Pstatus, dnn = c("High alcohol use", "Parental status"))
CrossTable(alc$high_use, alc$activities, dnn = c("High alcohol use", "Extra-curricular activities"))
m <- glm(high_use ~ famsize + activities + absences + Pstatus, data = alc, family = "binomial")
summary(m)
coef(m)
summary(m)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE),   ] ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
library(ggplot2)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE),   ] ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 <- ggplot(alc, aes(x= absences, fill=high_use)) + geom_density(alpha=.3)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE),   ] ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE),  alc$absences ] ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
alc[ which(alc$high_use == TRUE),  alc$absences ]
alc[ which(alc$high_use == TRUE),  absences ]
alc
colnames(alc)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE), 30  ] ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
alc[ which(alc$high_use == TRUE), 30  ]
mean( alc[ which(alc$high_use == TRUE), 30  ] )
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE), 30  ], trim = 0.10 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE), 30  ], trim = 0.5 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE), 30  ], nsmall = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
colnames(alc)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc$absences) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", round( median( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) , vjust=1.5, size=6)
median( alc[ which(alc$high_use == TRUE), 30  ] )
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ) , vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ) , vjust=1.5, size=6)
library(ggplot2)
p1 <- ggplot(alc, aes(x= absences, fill=high_use)) + geom_density(alpha=.3)
p1 + ggtitle("Absence distribution") + theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ), vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ) , vjust=1.5, size=6)
# find the model with glm()
m <- glm(high_use ~ famsize + activities + Pstatus + absences, data = alc, family = "binomial")
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# see the last ten original classes, predicted probabilities, and class predictions
select(alc, failures, absences, sex, high_use, probability, prediction) %>% head(10)
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction)
predictions versus the actual values
# predictions versus the actual values
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# see the last ten original classes, predicted probabilities, and class predictions
select(alc, failures, absences, sex, high_use, probability, prediction) %>% head(10)
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction)
# find the model with glm()
m <- glm(high_use ~ famsize + activities + Pstatus + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
# find the model with glm()
m <- glm(high_use ~ famsize + activities + Pstatus + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
m2 <- glm(high_use ~ absences, data = alc, family = "binomial")
OR2 <- coef(m2) %>% exp
CI2 <- confint(m2) %>% exp
# new model
m2 <- glm(high_use ~ absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR2 <- coef(m2) %>% exp
# compute confidence intervals (CI)
CI2 <- confint(m2) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
# new model
m2 <- glm(high_use ~ absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR2 <- coef(m2) %>% exp
# compute confidence intervals (CI)
CI2 <- confint(m2) %>% exp
# print out a summary of the model
summary(m2)
# print out the coefficients of the model
coef(m2)
# print out the odds ratios with their confidence intervals
cbind(OR2, CI2)
# alc is available
# access dplyr and ggplot2
library(dplyr); library(ggplot2)
# initialize a plot of 'high_use' versus 'probability' in 'alc'
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction))
# define the geom as points and draw the plot
g + geom_point()
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
m <- glm(high_use ~ failures + absences + sex, data = alc, family = "binomial")
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# see the last ten original classes, predicted probabilities, and class predictions
select(alc, failures, absences, sex, high_use, probability, prediction) %>% head(10)
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction)
# initialize a plot of 'high_use' versus 'probability' in 'alc'
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction))
# define the geom as points and draw the plot
g + geom_point()
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
# alc and dlyr are available
# find the model with glm()
m <- glm(high_use ~ failures + absences + sex, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
# alc is available
# find the model with glm()
m <- glm(high_use ~ failures + absences + sex, data = alc, family = "binomial")
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
m <- glm(high_use ~ failures + absences + sex, data = alc, family = "binomial")
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction)
# initialize a plot of 'high_use' versus 'probability' in 'alc'
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction))
# define the geom as points and draw the plot
g + geom_point()
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
# predictions versus the actual values
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction)
dim(alc)
259/382
259+84
343/382
# new model
m2 <- glm(high_use ~ absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR2 <- coef(m2) %>% exp
# compute confidence intervals (CI)
CI2 <- confint(m2) %>% exp
# print out a summary of the model
summary(m2)
# print out the coefficients of the model
coef(m2)
# print out the odds ratios with their confidence intervals
cbind(OR2, CI2)
# initialize a plot of 'high_use' versus 'probability' in 'alc'
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction))
# define the geom as points and draw the plot
g + geom_point()
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
# predictions versus the actual values
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
# find the model with glm()
m <- glm(high_use ~ famsize + activities + Pstatus + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
# predictions versus the actual values
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
# new model
m2 <- glm(high_use ~ absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR2 <- coef(m2) %>% exp
# compute confidence intervals (CI)
CI2 <- confint(m2) %>% exp
# predict() the probability of high_use
probabilities2 <- predict(m2, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability2 = probabilities2)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction2 = probabilities2 > 0.5 )
# print out a summary of the model
summary(m2)
# print out the coefficients of the model
coef(m2)
# print out the odds ratios with their confidence intervals
cbind(OR2, CI2)
# initialize a plot of 'high_use' versus 'probability' in 'alc'
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction2))
# define the geom as points and draw the plot
g + geom_point()
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction2) %>%
prop.table() %>%
addmargins
library(ggplot2)
p1 <- ggplot(alc, aes(x= absences, fill=high_use)) + geom_density(alpha=.3)
p1 + ggtitle("Absence distribution") +
theme_bw() +
annotate("text", x = 15, y= 0.14,
label= paste( "High alchol Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ),
vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "High alcohol Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ),
vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") +
theme_bw() +
annotate("text", x = 16, y= 0.14,
label= paste( "High alchol Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ),
vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "High alcohol Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ),
vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") +
theme_bw() +
annotate("text", x = 17, y= 0.14,
label= paste( "High alchol Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ),
vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "High alcohol Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ),
vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") +
theme_bw() +
annotate("text", x = 16.5, y= 0.14,
label= paste( "High alchol Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ),
vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "High alcohol Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ),
vjust=1.5, size=6)
p1 + ggtitle("Absence distribution") +
theme_bw() +
annotate("text", x = 16, y= 0.14,
label= paste( "High alchol Average =", round( mean( alc[ which(alc$high_use == TRUE), 30  ] ), digits = 2 ) ),
vjust=1.5, size=6) +
annotate("text", x = 15, y= 0.125,
label= paste( "High alcohol Median =", median( alc[ which(alc$high_use == TRUE), 30  ] )  ),
vjust=1.5, size=6)
anova(m1, m2, test="LRT")
anova(m, m2, test="LRT")
g <- ggplot(alc, aes(x = high_use, y =  probability2, col= prediction2))
g + geom_point()
g + geom_point() geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm")
g <- ggplot(alc, aes(x = probability, y = high_use, col= prediction2))
g + geom_point() + geom_smooth(method = "lm")
g <- ggplot(alc, aes(x = probability2, y = high_use, col= prediction2))
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_line(col = "salmon", size = 1.1)#geom_smooth(method = "lm")
g + geom_point() + geom_line(color = "blue", size = 1.1) #geom_line(col = "salmon", size = 1.1)
g <- ggplot(alc, aes(x = probability2, y = high_use, col= prediction2)) + xlab("probability")
g + geom_point() + geom_line(color = "blue", size = 1.1) #geom_line(col = "salmon", size = 1.1)
g + + geom_point(aes(y = high_use), size = 4, alpha = 0.5) + geom_line(color = "blue", size = 1.1) #geom_line(col = "salmon", size = 1.1)
g + geom_point(aes(y = high_use), size = 4, alpha = 0.5) + geom_line(color = "blue", size = 1.1) #geom_line(col = "salmon", size = 1.1)
g + geom_point()
g + geom_point() + geom_hline(yintercept = 0.5, col = "grey70", lty = 2)
g + geom_point()
# set working directory
setwd( "/Users/dtsallos/Desktop/OneDrive - University of Helsinki/GitHub/IODS-project/")
# read the alc data into memory
alc <- read.csv("data/student-combined.csv", sep = ",",header=TRUE)
alc <- alc[,-1] #remove column X with row numbers
# set working directory
setwd( "/Users/dtsallos/Desktop/OneDrive - University of Helsinki/GitHub/IODS-project/")
# read the alc data into memory
alc <- read.csv("data/student-combined.csv", sep = ",",header=TRUE)
alc <- alc[,-1] #remove column X with row numbers
m <- glm(high_use ~ famsize + (activities == no ) + Pstatus + absences, data = alc, family = "binomial")
alc$activities
m <- glm(high_use ~ famsize + (activities == "no") + Pstatus + absences, data = alc, family = "binomial")
# find the model with glm()
m <- glm(high_use ~ famsize + (activities == "no") + Pstatus + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
alc$Pstatus
m <- glm(high_use ~ famsize + (activities == "no") + (Pstatus == "A") + absences, data = alc, family = "binomial")
# find the model with glm()
m <- glm(high_use ~ famsize + (activities == "no") + (Pstatus == "A") + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
# predictions versus the actual values
# predict() the probability of high_use
probabilities <- predict(m, type = "response")
# add the predicted probabilities to 'alc'
alc <- mutate(alc, probability = probabilities)
# use the probabilities to make a prediction of high_use
alc <- mutate(alc, prediction = probabilities > 0.5 )
# tabulate the target variable versus the predictions
table(high_use = alc$high_use, prediction = alc$prediction) %>%
prop.table() %>%
addmargins
alc$famsize
m <- glm(high_use ~ (alc$famsize == "GT3") + (activities == "no") + (Pstatus == "A") + absences, data = alc, family = "binomial")
# find the model with glm()
m <- glm(high_use ~ (alc$famsize == "GT3") + (activities == "no") + (Pstatus == "A") + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
coef(m)
cbind(OR, CI)
# find the model with glm()
m <- glm(high_use ~ (alc$famsize == "GT3") + (activities == "no") + (Pstatus == "A") + absences, data = alc, family = "binomial")
# compute odds ratios (OR)
OR <- coef(m) %>% exp
# compute confidence intervals (CI)
CI <- confint(m) %>% exp
# print out a summary of the model
summary(m)
# print out the coefficients of the model
coef(m)
# print out the odds ratios with their confidence intervals
cbind(OR, CI)
